CREATE TABLE bookings (
    bookingID INT PRIMARY KEY AUTO_INCREMENT,
    userID INT NOT NULL,
    -- serviceID INT NULL,
    packageID INT NULL,
    customPackageID INT NULL,
    addOns VARCHAR(255),
    additionalRequest VARCHAR(255),
    paxNum INT NULL,
    hoursNum INT NULL,
    startDate DATETIME NOT NULL,
    endDate DATETIME NOT NULL,
    paymentMethod VARCHAR(50) NOT NULL,
    totalCost DECIMAL(10,2) NOT NULL,
    downpayment DECIMAL(10,2) NOT NULL,
    bookingStatus INT NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (userID) REFERENCES users(userID),
    FOREIGN KEY (bookingStatus) REFERENCES statuses(statusID),
    -- FOREIGN KEY (serviceID) REFERENCES services(serviceID),
    FOREIGN KEY (packageID) REFERENCES packages(packageID),
    FOREIGN KEY (customPackageID) REFERENCES customPackages(customPackageID)
);


CREATE TABLE bookingsServices (
    bookingServiceID INT PRIMARY KEY AUTO_INCREMENT,
    bookingID INT NOT NULL,
    serviceID INT NOT NULL,
    guests INT (50) NOT NULL, 
    totalPrice DECIMAL(10,2) NOT NULL,
    
    FOREIGN KEY (bookingID) REFERENCES bookings(bookingID),
    FOREIGN KEY (serviceID) REFERENCES services(serviceID)
);

CREATE TABLE confirmedBookings (
    confirmedBookingID INT PRIMARY KEY AUTO_INCREMENT,
    bookingID INT NOT NULL,
    paymentMethod VARCHAR(50) NOT NULL,
    downpayment DECIMAL(10,2) NOT NULL, -- calculated 30%
    downpaymentImage LONGBLOB NOT NULL, 
    totalCost DECIMAL(10,2) NOT NULL, -- total booking cost  
    amountPaid DECIMAL(10,2) NOT NULL DEFAULT 0.00,  -- admin will input how much the user pay
    userBalance DECIMAL(10,2) NOT NULL DEFAULT 0.00,  -- balance after payment
    confirmedBookingStatus INT DEFAULT 1,
    paymentStatus INT DEFAULT 1,
    
    FOREIGN KEY (bookingID) REFERENCES bookings(bookingID),
    FOREIGN KEY (confirmedBookingStatus) REFERENCES statuses(statusID),
    FOREIGN KEY (paymentStatus) REFERENCES bookingPaymentStatus(paymentStatusID)
);