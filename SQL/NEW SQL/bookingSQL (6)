CREATE TABLE bookings (
    bookingID INT PRIMARY KEY AUTO_INCREMENT,
    userID INT NOT NULL,
    -- serviceID INT NULL,
    bookingType ENUM('Resort', 'Hotel', 'Event', 'Customized') NOT NULL,
    packageID INT NULL,
    customPackageID INT NULL,
    addOns VARCHAR(50),
    additionalRequest TEXT,
    toddlerCount INT DEFAULT 0,
    paxNum INT NOT NULL,
    hoursNum INT NOT NULL,
    startDate DATETIME NOT NULL,
    endDate DATETIME NOT NULL,
    paymentMethod VARCHAR(50) NOT NULL,
    additionalCharge DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    -- discountID INT DEFAULT NULL,
    initialCost DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    totalCost DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    downpayment DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    bookingStatus INT DEFAULT 1,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (userID) REFERENCES users(userID),
    FOREIGN KEY (bookingStatus) REFERENCES statuses(statusID),
    -- FOREIGN KEY (discountID) REFERENCES discounts(discountID),
    -- FOREIGN KEY (serviceID) REFERENCES services(serviceID),
    FOREIGN KEY (packageID) REFERENCES packages(packageID),
    FOREIGN KEY (customPackageID) REFERENCES customPackages(customPackageID)
);

ALTER TABLE bookings
ADD COLUMN arrivalTime TIME NULL
AFTER hoursNum;

CREATE TABLE bookingServices (
    bookingServiceID INT PRIMARY KEY AUTO_INCREMENT,
    bookingID INT NOT NULL,
    serviceID INT NOT NULL,
    guests INT NOT NULL, 
    bookingServicePrice DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    
    FOREIGN KEY (bookingID) REFERENCES bookings(bookingID),
    FOREIGN KEY (serviceID) REFERENCES services(serviceID)
);

CREATE TABLE confirmedBookings (
    confirmedBookingID INT PRIMARY KEY AUTO_INCREMENT,
    bookingID INT NOT NULL,
    downpaymentImage LONGBLOB NULL, 
    discountAmount DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    CBtotalCost DECIMAL(10,2) NOT NULL DEFAULT 0.00, -- total booking cost  
    CBfinalBill DECIMAL(10,2) NOT NULL DEFAULT 0.00, -- with discount 
    amountPaid DECIMAL(10,2) NOT NULL DEFAULT 0.00,  -- admin will input how much the user pay
    userBalance DECIMAL(10,2) NOT NULL DEFAULT 0.00,  -- balance after payment
    confirmedBookingStatus INT DEFAULT 1,
    paymentStatus INT DEFAULT 1,
    
    FOREIGN KEY (bookingID) REFERENCES bookings(bookingID),
    FOREIGN KEY (confirmedBookingStatus) REFERENCES statuses(statusID),
    FOREIGN KEY (paymentStatus) REFERENCES bookingPaymentStatus(paymentStatusID)
);            

ALTER TABLE confirmedBookings 
ADD COLUMN paymentDueDate DATE NOT NULL
AFTER paymentStatus