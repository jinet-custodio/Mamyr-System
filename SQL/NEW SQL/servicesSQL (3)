CREATE TABLE partnershipServices (
    partnershipServiceID INT PRIMARY KEY AUTO_INCREMENT,
    partnershipID INT NOT NULL,
    PBName VARCHAR(200) NOT NULL,
    PBPrice DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    PBDescription TEXT,
    PBcapacity INT,
    PSstatus INT NOT NULL,
    PSAvailabilityID INT NOT NULL,

    FOREIGN KEY (partnershipID) REFERENCES partnerships(partnershipID),
    FOREIGN KEY (PSAvailabilityID) REFERENCES serviceAvailability(availabilityID),
    FOREIGN KEY (PSstatus) REFERENCES statuses(statusID)
);

CREATE TABLE resortAmenities (
    resortServiceID INT PRIMARY KEY AUTO_INCREMENT,
    RServiceName VARCHAR(200) NOT NULL,
    RSprice DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    RScapacity INT DEFAULT 0,
    RSduration VARCHAR(50) DEFAULT '0',
    RScategoryID INT NOT NULL,
    RSdescription TEXT NULL,
    RSimageData LONGBLOB,
    RSAvailabilityID INT,

   FOREIGN KEY (RSAvailabilityID) REFERENCES serviceAvailability(availabilityID),
   FOREIGN KEY (RScategoryID) REFERENCES  resortServicesCategories(categoryID) 
);

CREATE TABLE entranceRates (
    entranceRateID INT PRIMARY KEY AUTO_INCREMENT,
    sessionType VARCHAR(20),               
    timeRangeID INT,                         
    ERcategory ENUM('Adult', 'Kids') NOT NULL,                 
    ERprice DECIMAL(10,2) DEFAULT 0.00,      

    FOREIGN KEY (timeRangeID) REFERENCES entranceTimeRanges(timeRangeID)
);


CREATE TABLE services (
    serviceID INT PRIMARY KEY AUTO_INCREMENT,
    resortServiceID INT DEFAULT NULL,
    partnershipServiceID INT DEFAULT NULL,
    entranceRateID INT DEFAULT NULL,
    serviceType ENUM('Resort', 'Partnership', 'Entrance') NOT NULL,

    FOREIGN KEY (partnershipServiceID) REFERENCES partnershipServices(partnershipServiceID),
    FOREIGN KEY (resortServiceID) REFERENCES resortAmenities(resortServiceID),
    FOREIGN KEY (entranceRateID) REFERENCES entranceRates(entranceRateID)
);


CREATE TABLE menuItems (
    foodItemID INT PRIMARY KEY AUTO_INCREMENT,
    foodName VARCHAR(200) NOT NULL,
    foodDescription TEXT,
    foodPrice DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    foodCategory VARCHAR(100), 
    availabilityID INT,

    FOREIGN KEY (availabilityID) REFERENCES serviceAvailability(availabilityID)
);


CREATE TABLE packages (
    packageID INT PRIMARY KEY AUTO_INCREMENT,
    packageName VARCHAR(100) NOT NULL,
    packageDescription TEXT NOT NULL,
    Pduration DECIMAL(10,2), 
    Pcapacity INT NOT NULL,
    resortServiceID INT NOT NULL,
    Pprice DECIMAL(10,2) DEFAULT 0.00,
    PcategoryID INT NOT NULL,
    packageAvailability INT NOT NULL,

    FOREIGN KEY (packageAvailability) REFERENCES serviceAvailability(availabilityID), 
    FOREIGN KEY (resortServiceID) REFERENCES resortAmenities(resortServiceID),
    FOREIGN KEY (PcategoryID) REFERENCES eventCategories(categoryID)
);


CREATE TABLE packageFoodItems (
    packageFoodItemID INT PRIMARY KEY AUTO_INCREMENT,
    packageID INT NOT NULL,
    foodItemID INT NOT NULL,
    quantity INT NOT NULL DEFAULT 1,
    totalPrice DECIMAL(10,2) NOT NULL,

    FOREIGN KEY (packageID) REFERENCES packages(packageID),
    FOREIGN KEY (foodItemID) REFERENCES menuItems(foodItemID)
);

-- CREATE TABLE customPackages (
--     customPackageID INT PRIMARY KEY AUTO_INCREMENT, 
--     userID INT NOT NULL, 
--     CPtotalPrice DECIMAL(10,2) DEFAULT 0.00,
--     creationDate DATE NOT NULL,

--     FOREIGN KEY (userID) REFERENCES users(userID)
-- );


CREATE TABLE customPackages (
    customPackageID INT PRIMARY KEY AUTO_INCREMENT,
    userID INT NOT NULL,
    customPackageTotalPrice DECIMAL(10,2) NOT NULL,
    customPackageNotes VARCHAR(255),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (userID) REFERENCES users(userID)
);

CREATE TABLE customPackageItems (
    customPackageItemID INT PRIMARY KEY AUTO_INCREMENT,
    customPackageID INT NOT NULL,
    serviceID INT NOT NULL,
    packageID INT NOT NULL,
    quantity INT NOT NULL DEFAULT 1,
    servicePrice DECIMAL(10,2) NOT NULL,

    FOREIGN KEY (customPackageID) REFERENCES customPackages(customPackageID),
    FOREIGN KEY (serviceID) REFERENCES services(serviceID),
    FOREIGN KEY (packageID) REFERENCES packages(packageID)
);



CREATE TABLE discounts (
    discountID INT PRIMARY KEY AUTO_INCREMENT,
    discountName VARCHAR(100) NOT NULL,
    discountPercent DECIMAL(5,2) NOT NULL, 
    discountAmount DECIMAL(10,2) DEFAULT NULL, 
    startDate DATE NOT NULL,
    endDate DATE NOT NULL,
    applicableTo ENUM('Service', 'Package', 'Booking', 'All') NOT NULL DEFAULT 'All',
    serviceID INT DEFAULT NULL,
    packageID INT DEFAULT NULL,
    isActive BOOLEAN DEFAULT TRUE,

    FOREIGN KEY (serviceID) REFERENCES services(serviceID),
    FOREIGN KEY (packageID) REFERENCES packages(packageID)
);



CREATE TABLE serviceUnavailableDates (
    serviceUnavailableID INT AUTO_INCREMENT PRIMARY KEY,
    resortServiceID INT NULL,
    partnershipServiceID INT NULL,
    unavailableStartDate DATETIME NOT NULL,
    unavailableEndDate DATETIME NOT NULL,


    FOREIGN KEY (resortServiceID) REFERENCES resortAmenities(resortServiceID),
    FOREIGN KEY(partnershipServiceID) REFERENCES partnershipServices(partnershipServiceID)
);

