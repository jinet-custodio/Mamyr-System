USE mamyr;

CREATE TABLE partnershipservice (
    partnershipServiceID INT PRIMARY KEY AUTO_INCREMENT,
    partnershipID INT NOT NULL,
    partnerTypeID INT NOT NULL,
    PBName VARCHAR(200) NOT NULL,
    PBPrice DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    PBDescription TEXT,
    PBcapacity INT DEFAULT 1,
    PBduration varchar(255) NULL,
    PSAvailabilityID INT DEFAULT 1,
    createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (partnershipID) REFERENCES partnership(partnershipID),
    FOREIGN KEY (PSAvailabilityID) REFERENCES serviceavailability(availabilityID),
    FOREIGN KEY (partnerTypeID) REFERENCES partnershiptype(partnerTypeID) ON DELETE RESTRICT ON UPDATE RESTRICT
);


CREATE TABLE resortamenity (
    resortServiceID INT PRIMARY KEY AUTO_INCREMENT,
    RServiceName VARCHAR(200) NOT NULL,
    RSprice DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    RScapacity INT DEFAULT 0,
    RSmaxCapacity INT DEFAULT 0,
    RSduration VARCHAR(50) DEFAULT '0',
    RScategoryID INT NOT NULL,
    RSdescription TEXT NULL,
    RSimageData VARCHAR(255) NULL,
    RSAvailabilityID INT DEFAULT 1,

   FOREIGN KEY (RSAvailabilityID) REFERENCES serviceavailability(availabilityID),
   FOREIGN KEY (RScategoryID) REFERENCES  resortservicescategory(categoryID) 
);

CREATE TABLE entrancerate (
    entranceRateID INT PRIMARY KEY AUTO_INCREMENT,
    sessionType VARCHAR(20),               
    timeRangeID INT,                         
    ERcategory ENUM('Adult', 'Kids') NOT NULL,                 
    ERprice DECIMAL(10,2) DEFAULT 0.00,      

    FOREIGN KEY (timeRangeID) REFERENCES entrancetimerange(timeRangeID)
);

ALTER TABLE entrancerate
ADD COLUMN availability ENUM ('Enabled', 'Disabled') DEFAULT 'Enabled';


CREATE TABLE service (
    serviceID INT PRIMARY KEY AUTO_INCREMENT,
    resortServiceID INT DEFAULT NULL UNIQUE,
    partnershipServiceID INT DEFAULT NULL UNIQUE,
    entranceRateID INT DEFAULT NULL,
    serviceType ENUM('Resort', 'Partnership', 'Entrance') NOT NULL,

    FOREIGN KEY (partnershipServiceID) REFERENCES partnershipservice(partnershipServiceID),
    FOREIGN KEY (resortServiceID) REFERENCES resortamenity(resortServiceID),
    FOREIGN KEY (entranceRateID) REFERENCES entrancerate(entranceRateID)
);


CREATE TABLE menuitem (
    foodItemID INT PRIMARY KEY AUTO_INCREMENT,
    foodName VARCHAR(200) NOT NULL,
    foodDescription TEXT,
    foodCategory VARCHAR(100), 
    availabilityID INT DEFAULT 1,
    ageGroup ENUM('Adult', 'Child', 'Both') NOT NULL DEFAULT 'Adult',

    FOREIGN KEY (availabilityID) REFERENCES serviceavailability(availabilityID)
);

CREATE TABLE servicePricing (
    pricingID INT PRIMARY KEY AUTO_INCREMENT,
    
    pricingType varchar(50) NOT NULL, -- e.g. per head, per hour
    price DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    
    chargeType VARCHAR(50) NOT NULL, -- e.g. "Food", "Extra Hour", "Overnight"
    
    ageGroup ENUM('Adult', 'Child', 'Both') DEFAULT NULL,   
    notes TEXT,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE `servicepricing` CHANGE `pricingType` `pricingType` ENUM('Per Head', 'Per Hour') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL, CHANGE `chargeType` `chargeType` ENUM('Room', 'Food') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL;
ALTER TABLE `servicepricing` CHANGE `chargeType` `chargeType` ENUM('Room','Food', 'Event') CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL;


CREATE TABLE custompackage (
    customPackageID INT PRIMARY KEY AUTO_INCREMENT,
    userID INT NOT NULL,
    foodPricingPerHeadID INT, 
    totalFoodPrice DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    venuePricing DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    customPackageTotalPrice DECIMAL(10,2) NOT NULL DEFAULT 0.00,
    customPackageNotes VARCHAR(255),
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

    FOREIGN KEY (userID) REFERENCES user(userID),
    FOREIGN KEY (foodPricingPerHeadID) REFERENCES servicePricing(pricingID)
);

ALTER TABLE custompackage 
ADD COLUMN additionalServicePrice Decimal(10,2) NOT NULL DEFAULT 0.00
AFTER  venuePricing;


ALTER TABLE custompackage
ADD COLUMN eventTypeID INT
AFTER customPackageID;


ALTER TABLE custompackage
ADD CONSTRAINT fk_eventTypeID
FOREIGN KEY (eventTypeID)
REFERENCES eventcategory(categoryID)
ON DELETE SET NULL
ON UPDATE CASCADE;


CREATE TABLE custompackageitem (
    customPackageItemID INT PRIMARY KEY AUTO_INCREMENT,
    customPackageID INT NOT NULL,
    serviceID INT NULL,
    foodItemID INT  NULL,
    servicePrice DECIMAL(10,2) NOT NULL DEFAULT 0.00,

    FOREIGN KEY (customPackageID) REFERENCES custompackage(customPackageID),
    FOREIGN KEY (serviceID) REFERENCES service(serviceID),
    FOREIGN KEY (foodItemID) REFERENCES menuitem(foodItemID) 
);

CREATE TABLE serviceunavailabledate (
    serviceUnavailableID INT AUTO_INCREMENT PRIMARY KEY,
    resortServiceID INT NULL,
    partnershipServiceID INT NULL,
    unavailableStartDate DATETIME NOT NULL,
    unavailableEndDate DATETIME NOT NULL,


    FOREIGN KEY (resortServiceID) REFERENCES resortamenity(resortServiceID),
    FOREIGN KEY(partnershipServiceID) REFERENCES partnershipservice(partnershipServiceID)
);

